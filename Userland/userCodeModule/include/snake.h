#ifndef SNAKE_H
#define SNAKE_H

#include <stdint.h>

#define BOARDCOLOR1 0x00B77460
#define BOARDCOLOR2 0x00F2997F

#define PLAYER1_DEFAULT_COLOR 0x00FAE425
#define PLAYER2_DEFAULT_COLOR 0x00FF71BE

enum Direction {NONE=(0x00), UP=(0x80), DOWN=(0x40), RIGHT=(0x10), LEFT=(0x20)};

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//main function
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

//================================================================================================================================
// Snake
//Main function for the game
//Ejecuta el juego de snake.
//================================================================================================================================
void Snake();



//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//setup
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//================================================================================================================================
// Main Screen Stuff
// snakeScreen
//Imprime en pantalla el menu principal y se encarga de retornar la cantidad de jugadores de la partida.
//================================================================================================================================
uint8_t snakeScreen();


//================================================================================================================================
// initGame
//Se encarga de obtener la información de la pantalla para calcular las dimensiones
//apropiadas de tablero. Devuelve 1 si debido a las dimensiones obtenidas no son suficientes para un correcto funcionamiento del juego.
//================================================================================================================================
uint8_t initGame();

//================================================================================================================================
// tablero
//Recorre la matriz del tablero para dibujarlo. Si encuentra valor 0 simplemente dibuja el tablero, en caso contrario dibuja una 
//serpiente o manzana segun corresponda por su valor.
//================================================================================================================================
void tablero();

//================================================================================================================================
// snakeSetup
// Se encarga de colocar a la serpiente indicada en su lugar de inicio en el tablero
//================================================================================================================================
void snakeSetup(uint8_t snake);




//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//logic
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

//================================================================================================================================
// addApple
// Se encarga de obtener valores de columna y fila para colocar una manzana. Asimismo verifica que en la casilla obtenida no exista
//ya una manzana o una serpiente presente.
//================================================================================================================================
void addApple();

//================================================================================================================================
// addSnake
//Añade el valor de esa serpiente en la casilla solicitada.
//================================================================================================================================
void addSnake(uint8_t row, uint8_t column, uint8_t elem, enum Direction dir);

//================================================================================================================================
// putSnake
//Se encarga de dibujar la serpiente de manera adecuada. Contiene la logica para identificar si se trata de una curva o no, y 
//graficar el bitmap correspondiente en su posición.
//================================================================================================================================
void putSnake(uint8_t row, uint8_t column, uint8_t snake);

//================================================================================================================================
// printPoints
//Se encarga de actualizar el puntaje en pantalla.
//================================================================================================================================
void printPoints(uint8_t snake);





//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//directions
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

//================================================================================================================================
// slither
//Se encarga de mover la serpiente en la dirección pedida. Actualiza la posición del head de la snake.
//Si corresponde por comer una manzana, aumenta el tamaño de la serpiente.
//Utiliza changePosition de manera recursiva para ubicar la tail.
//Retorna 1 si colisiono con los bordes, retorna 2 si colisiona consigo misma u otra serpiente.
//================================================================================================================================
uint8_t slither(enum Direction dir, uint8_t snake);

//================================================================================================================================
// changePosition
//Se encarga de eliminar la cola y reubicar la head dada.
//Retorna 1 para la lógica interna, indica que se acaba de volver de eliminar el tail y se debe reestablecer su valor.
//================================================================================================================================
uint8_t changePosition(uint8_t column, uint8_t row, enum Direction dir, uint8_t snake);


//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//setters
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

//================================================================================================================================
// saveTailPosition
//Guarda en la variable las posiciones de tail.
//================================================================================================================================
void saveTailPosition(uint8_t snake, uint8_t column, uint8_t row);

//================================================================================================================================
// saveHeadPosition
//Guarda en la variable las posiciones de head.
//================================================================================================================================
void saveHeadPosition(uint8_t snake, uint8_t column, uint8_t row);



//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//getters
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

//================================================================================================================================
// getDirection
//devuelve la dirección de una posición de snake.
//================================================================================================================================
enum Direction getDirection(int row, int column);

//================================================================================================================================
// obtienen las posiciones de head y tail correspondientes
//================================================================================================================================

uint8_t getSnakeTailCol(uint8_t snake);
uint8_t getSnakeTailRow(uint8_t snake);
uint8_t getSnakeHeadCol(uint8_t snake);
uint8_t getSnakeHeadRow(uint8_t snake);

//================================================================================================================================
// obtienen el color de la snake correspondiente
//================================================================================================================================
uint32_t getSnakeColor(uint8_t snake);



//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//checkers
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

//================================================================================================================================
// Se fijan con la ubicación dada si hay cuerpo de la misma serpiente en su proximidad del tablero.
//================================================================================================================================

uint8_t checkUp(uint8_t row, uint8_t column, uint8_t value);
uint8_t checkDown(uint8_t row, uint8_t column, uint8_t value);
uint8_t checkLeft(uint8_t row, uint8_t column, uint8_t value);
uint8_t checkRight(uint8_t row, uint8_t column, uint8_t value);



#endif